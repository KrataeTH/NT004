<?php
// ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ LINE API
$access_token = 'B8AzbBkCr10BHDCpTxeSPBRiiPefrRjwkdY0b6ChBiTaxMk99Jd3QjcyVwXsC7Nv+ErF90h0GAEaGsIdMo/eh0Hb+zcIMkSG43ItQgp7sX3FyLCIMD1yl+4CMBrGnlZW5KcijlCTZcjg5GzJWWVoYwdB04t89/1O/w1cDnyilFU='; 
$login_url = 'https://4a35-125-26-7-18.ngrok-free.app/NT004/page/login.php';

// ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
$db_host = 'localhost'; 
$db_user = 'root';     
$db_pass = '';         
$db_name = 'ntdb';     

$conn = new mysqli($db_host, $db_user, $db_pass, $db_name);
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• JSON ‡∏à‡∏≤‡∏Å webhook
$json = file_get_contents('php://input');
$events = json_decode($json, true);

if (!empty($events['events'])) {
    foreach ($events['events'] as $event) {
        if ($event['type'] == 'message' && $event['message']['type'] == 'text') {
            $replyToken = $event['replyToken'];
            $userMessage = trim($event['message']['text']); // ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡πá‡∏Å

            if (strcasecmp($userMessage, 'login') == 0) {
                sendReply($replyToken, "üîë ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÇ‡∏î‡∏¢‡∏Å‡∏î‡∏ó‡∏µ‡πà‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏ô‡∏µ‡πâ: \n" . $login_url, $access_token);
            } 
            elseif (strcasecmp($userMessage, 'bill') == 0 || strcasecmp($userMessage, '‡∏ö‡∏¥‡∏•') == 0) {
                sendBillMessage($replyToken, $conn, $access_token);
            }
            elseif (strcasecmp($userMessage, 'income') == 0 || strcasecmp($userMessage, '‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ') == 0) {
                sendIncomeMessage($replyToken, $conn, $access_token);
            }
            // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡πÉ‡∏´‡∏°‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ä‡∏∑‡πà‡∏≠‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤
            elseif (preg_match('/^[‡∏Å-‡πô]+$/u', $userMessage)) { // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢
                searchCustomerByName($replyToken, $userMessage, $conn, $access_token);
            }
            // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÄ‡∏•‡∏Ç‡∏´‡∏°‡∏≤‡∏¢
            elseif (strpos($userMessage, 'detail_number_') === 0) {
                $serviceId = str_replace('detail_number_', '', $userMessage);
                sendServiceDetails($replyToken, $serviceId, $conn, $access_token);
            }
            else {
                sendMenu($replyToken, $access_token);
            }
        }
    }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏¥‡∏•
function sendBillMessage($replyToken, $conn, $accessToken) {
    $sql = "SELECT type_bill, COUNT(*) as count FROM bill_customer GROUP BY type_bill";
    $result = $conn->query($sql);
    
    if ($result->num_rows > 0) {
        $totalBills = 0;
        $message = "üìÑ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ö‡∏¥‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î:\n";
        while ($row = $result->fetch_assoc()) {
            $totalBills += $row['count'];
            $message .= "- " . $row['type_bill'] . ": " . $row['count'] . " ‡∏ö‡∏¥‡∏•\n";
        }
        $message = "üìÑ ‡∏ö‡∏¥‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏°‡∏µ $totalBills ‡∏ö‡∏¥‡∏•\n" . $message;
    } else {
        $message = "‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏¥‡∏•";
    }
    
    sendReply($replyToken, $message, $accessToken);
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢
function getThaiMonth($month) {
    $months = [
        '01' => '‡∏°‡∏Å‡∏£‡∏≤‡∏Ñ‡∏°', '02' => '‡∏Å‡∏∏‡∏°‡∏†‡∏≤‡∏û‡∏±‡∏ô‡∏ò‡πå', '03' => '‡∏°‡∏µ‡∏ô‡∏≤‡∏Ñ‡∏°',
        '04' => '‡πÄ‡∏°‡∏©‡∏≤‡∏¢‡∏ô', '05' => '‡∏û‡∏§‡∏©‡∏†‡∏≤‡∏Ñ‡∏°', '06' => '‡∏°‡∏¥‡∏ñ‡∏∏‡∏ô‡∏≤‡∏¢‡∏ô',
        '07' => '‡∏Å‡∏£‡∏Å‡∏é‡∏≤‡∏Ñ‡∏°', '08' => '‡∏™‡∏¥‡∏á‡∏´‡∏≤‡∏Ñ‡∏°', '09' => '‡∏Å‡∏±‡∏ô‡∏¢‡∏≤‡∏¢‡∏ô',
        '10' => '‡∏ï‡∏∏‡∏•‡∏≤‡∏Ñ‡∏°', '11' => '‡∏û‡∏§‡∏®‡∏à‡∏¥‡∏Å‡∏≤‡∏¢‡∏ô', '12' => '‡∏ò‡∏±‡∏ô‡∏ß‡∏≤‡∏Ñ‡∏°'
    ];
    return $months[$month];
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ
function sendIncomeMessage($replyToken, $conn, $accessToken) {
    $sql = "SELECT DATE_FORMAT(bc.create_at, '%Y-%m') as month, SUM(o.all_price) as monthly_revenue
            FROM customers c
            JOIN bill_customer bc ON c.id_customer = bc.id_customer
            JOIN service_customer sc ON bc.id_bill = sc.id_bill
            JOIN package_list pl ON sc.id_service = pl.id_service
            JOIN product_list pr ON pl.id_package = pr.id_package
            JOIN overide o ON pr.id_product = o.id_product
            GROUP BY DATE_FORMAT(bc.create_at, '%Y-%m')
            ORDER BY month ASC";
    $result = $conn->query($sql);
    
    $totalRevenue = 0;
    $message = "";
    
    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            $totalRevenue += $row['monthly_revenue'];
        }
        
        $message .= "üìä ‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: " . number_format($totalRevenue, 2) . " ‡∏ö‡∏≤‡∏ó\n";
        $message .= "‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡∏Ç‡∏≠‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞‡πÄ‡∏î‡∏∑‡∏≠‡∏ô:\n";
        
        $result->data_seek(0); 
        $currentYear = null;
        
        while ($row = $result->fetch_assoc()) {
            list($year, $monthNum) = explode('-', $row['month']);
            $thaiMonth = getThaiMonth($monthNum);
            $thaiYear = intval($year) + 543;

            if ($currentYear !== $thaiYear) {
                $message .= "\nüóì ‡∏õ‡∏µ $thaiYear\n";
                $currentYear = $thaiYear;
            }

            $revenue = $row['monthly_revenue'];
            $revenueFormatted = (intval($revenue) == $revenue) ? number_format($revenue) : number_format($revenue, 2);
            $message .= "- $thaiMonth: " . $revenueFormatted . " ‡∏ö‡∏≤‡∏ó\n";
        }
    } else {
        $message = "‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ";
    }

    sendReply($replyToken, $message, $accessToken);
}

function searchCustomerByName($replyToken, $customerName, $conn, $accessToken) {
    // ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤
    $sql = "SELECT c.id_customer, c.name_customer, 
                   SUM(o.all_price) as total_revenue, 
                   COUNT(sc.id_service) as service_count
            FROM customers c
            LEFT JOIN bill_customer bc ON c.id_customer = bc.id_customer
            LEFT JOIN service_customer sc ON bc.id_bill = sc.id_bill
            LEFT JOIN package_list pl ON sc.id_service = pl.id_service
            LEFT JOIN product_list pr ON pl.id_package = pr.id_package
            LEFT JOIN overide o ON pr.id_product = o.id_product
            WHERE c.name_customer LIKE '%$customerName%'
            GROUP BY c.id_customer";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        $customer = $result->fetch_assoc();
        $totalRevenue = $customer['total_revenue'];
        $serviceCount = $customer['service_count'];

        // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏£‡∏∏‡∏õ
        $message = "üîç ‡∏ä‡∏∑‡πà‡∏≠‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤: " . $customer['name_customer'] . "\n";
        $message .= "üìä ‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: " . number_format($totalRevenue, 2) . " ‡∏ö‡∏≤‡∏ó\n";
        $message .= "üìû ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏•‡∏Ç‡∏´‡∏°‡∏≤‡∏¢‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: $serviceCount ‡πÄ‡∏•‡∏Ç\n\n";
        $message .= "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏•‡∏Ç‡∏´‡∏°‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î:";

        // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏•‡∏Ç‡∏´‡∏°‡∏≤‡∏¢‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏Ç‡∏≠‡∏á‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤
        $sql = "SELECT sc.id_service, sc.service_number
                FROM service_customer sc
                JOIN bill_customer bc ON sc.id_bill = bc.id_bill
                WHERE bc.id_customer = " . $customer['id_customer'];
        $result = $conn->query($sql);

        if ($result->num_rows > 0) {
            $actions = [];
            while ($row = $result->fetch_assoc()) {
                $serviceId = $row['id_service'];
                $serviceNumber = $row['service_number'];
                $actions[] = [
                    "type" => "message",
                    "label" => "‡πÄ‡∏•‡∏Ç‡∏´‡∏°‡∏≤‡∏¢ $serviceNumber",
                    "text" => "detail_number_$serviceId"
                ];
            }

            // ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏•‡∏Ç‡∏´‡∏°‡∏≤‡∏¢
            $url = 'https://api.line.me/v2/bot/message/reply';
            $data = [
                'replyToken' => $replyToken,
                'messages' => [
                    [
                        "type" => "text",
                        "text" => $message
                    ],
                    [
                        "type" => "template",
                        "altText" => "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏•‡∏Ç‡∏´‡∏°‡∏≤‡∏¢",
                        "template" => [
                            "type" => "buttons",
                            "text" => "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏•‡∏Ç‡∏´‡∏°‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î",
                            "actions" => $actions
                        ]
                    ]
                ]
            ];

            $options = [
                'http' => [
                    'header'  => "Content-type: application/json\r\nAuthorization: Bearer $accessToken\r\n",
                    'method'  => 'POST',
                    'content' => json_encode($data),
                ],
            ];

            $context = stream_context_create($options);
            file_get_contents($url, false, $context);
        } else {
            sendReply($replyToken, "‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÄ‡∏•‡∏Ç‡∏´‡∏°‡∏≤‡∏¢‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤ $customerName", $accessToken);
        }
    } else {
        sendReply($replyToken, "‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ä‡∏∑‡πà‡∏≠ $customerName", $accessToken);
    }
}

function sendServiceDetails($replyToken, $serviceId, $conn, $accessToken) {
    // ‡∏î‡∏∂‡∏á‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÄ‡∏•‡∏Ç‡∏´‡∏°‡∏≤‡∏¢
    $sql = "SELECT sc.service_number, 
                   SUM(o.all_price) as total_revenue, 
                   GROUP_CONCAT(pr.name SEPARATOR ', ') as products
            FROM service_customer sc
            LEFT JOIN package_list pl ON sc.id_service = pl.id_service
            LEFT JOIN product_list pr ON pl.id_package = pr.id_package
            LEFT JOIN overide o ON pr.id_product = o.id_product
            WHERE sc.id_service = $serviceId
            GROUP BY sc.id_service";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        $service = $result->fetch_assoc();
        $message = "üìû ‡πÄ‡∏•‡∏Ç‡∏´‡∏°‡∏≤‡∏¢: " . $service['service_number'] . "\n";
        $message .= "üí∞ ‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡∏£‡∏ß‡∏°: " . number_format($service['total_revenue'], 2) . " ‡∏ö‡∏≤‡∏ó\n";
        $message .= "üì¶ ‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå: " . $service['products'] . "\n";
    } else {
        $message = "‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÄ‡∏•‡∏Ç‡∏´‡∏°‡∏≤‡∏¢ #$serviceId";
    }

    sendReply($replyToken, $message, $accessToken);
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
function sendReply($replyToken, $message, $accessToken) {
    $url = 'https://api.line.me/v2/bot/message/reply';
    $data = [
        'replyToken' => $replyToken,
        'messages' => [
            [
                'type' => 'text',
                'text' => $message
            ]
        ]
    ];

    $options = [
        'http' => [
            'header'  => "Content-type: application/json\r\nAuthorization: Bearer $accessToken\r\n",
            'method'  => 'POST',
            'content' => json_encode($data),
        ],
    ];

    $context = stream_context_create($options);
    file_get_contents($url, false, $context);
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡πà‡∏á‡πÄ‡∏°‡∏ô‡∏π‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠
function sendMenu($replyToken, $accessToken) {
    $url = 'https://api.line.me/v2/bot/message/reply';
    
    $menu = [
        "type" => "template",
        "altText" => "‡πÄ‡∏°‡∏ô‡∏π‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠",
        "template" => [
            "type" => "buttons",
            "text" => "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£",
            "actions" => [
                ["type" => "message", "label" => "üëÅÔ∏è ‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏¥‡∏•", "text" => "bill"],
                ["type" => "message", "label" => "üìä ‡∏î‡∏π‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ", "text" => "income"],
                ["type" => "message", "label" => "üîë ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö", "text" => "login"]
            ]
        ]
    ];
    
    $data = [
        'replyToken' => $replyToken,
        'messages' => [$menu]
    ];
    
    $options = [
        'http' => [
            'header'  => "Content-type: application/json\r\nAuthorization: Bearer $accessToken\r\n",
            'method'  => 'POST',
            'content' => json_encode($data),
        ],
    ];
    
    $context = stream_context_create($options);
    file_get_contents($url, false, $context);
}

echo "OK";
?>